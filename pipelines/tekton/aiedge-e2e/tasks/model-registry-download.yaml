apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: model-registry-download
spec:
  description: This Task can be used to fetch a model properties from model registry when enabled or properties passed by pipelinerun 
  params:
  - name: model-name
    type: string
  - name: model-version
    type: string
  #Values to be passed by pipeline run when model-register is disabled
  - name: s3-bucket-name
    type: string
    default: ""
  - name: modelRelativePath
    type: string
    default: ""
  - name: model-dir
    type: string
    default: "."
  - name: fetch-model
    type: string
  - name: git-model-repo
    type: string
    default: ""
  - name: git-model-revision
    type: string
    default: "main"
  - name: model-registry-hostname
    type: string
    default: ""
  - name: model-registry-enabled
    type: string
  results:
  - name: fetch-model
    type: string
    description: The fetch mechanism that will be forwarded to the pipeline
  - name: git-model-repo
    description: The GIT URI that will be forwarded to the pipeline
  - name: s3-bucket-name
    description: The s3 Bucket name that will be forwarded to the pipeline
  - name: modelRelativePath
    type: string
  - name: model-dir
    type: string
  - name: git-model-revision
    type: string
  steps:
  - name: download-model-registry
    script: |
      if [ "$model_registry_enabled" == "true" ]; then
        export MODEL_ID=$(curl --silent -X 'GET' \
        "$(params.model-registry-hostname)/api/model_registry/v1alpha2/registered_models?" -H 'accept: application/json' | \
        jq -r --arg MODEL_NAME "$(params.model-name)" '.items[] | select(.name == $MODEL_NAME).id')
    
        if [[ ! -z "$MODEL_ID" ]]; then
          #fetching parameters from model-registry

          export FETCH_MODEL=$(curl --silent -X 'GET' \
          "$(params.model-registry-hostname)/api/model_registry/v1alpha2/model_versions/17" -H 'accept: application/json' | \
          jq -r --arg MODEL_PARAM "fetch-model" '.customProperties[$MODEL_PARAM].string_value') 
          echo -n "$FETCH_MODEL" | tee $(results.fetch-model)

          export GIT_MODEL_REPO=$(curl --silent -X 'GET' \
          "$(params.model-registry-hostname)/api/model_registry/v1alpha2/model_versions/17" -H 'accept: application/json' | \
          jq -r --arg MODEL_PARAM "git-model-repo" '.customProperties[$MODEL_PARAM].string_value') 
          echo -n "$GIT_MODEL_REPO" | tee $(results.git-model-repo)

          export GIT_MODEL_REVISION=$(curl --silent -X 'GET' \
          "$(params.model-registry-hostname)/api/model_registry/v1alpha2/model_versions/17" -H 'accept: application/json' | \
          jq -r --arg MODEL_PARAM "git-model-revision" '.customProperties[$MODEL_PARAM].string_value') 
          echo -n "$GIT_MODEL_REVISION" | tee $(results.git-model-revision)

          export MODEL_DIR=$(curl --silent -X 'GET' \
          "$(params.model-registry-hostname)/api/model_registry/v1alpha2/model_versions/17" -H 'accept: application/json' | \
          jq -r --arg MODEL_PARAM "model-dir" '.customProperties[$MODEL_PARAM].string_value') 
          echo -n "$MODEL_DIR" | tee $(results.model-dir)

          export MODEL_RELATIVE_PATH=$(curl --silent -X 'GET' \
          "$(params.model-registry-hostname)/api/model_registry/v1alpha2/model_versions/17" -H 'accept: application/json' | \
          jq -r --arg MODEL_PARAM "modelRelativePath" '.customProperties[$MODEL_PARAM].string_value') 
          echo -n "$MODEL_RELATIVE_PATH" | tee $(results.modelRelativePath) 

      else 
          #Passing params from pipelinerun forward into the pipeline 

          echo -n "$(params.fetch-model)"| tee $(results.fetch-model)
          echo -n "$(params.git-model-repo)" | tee $(results.git-model-repo)
          echo -n "$(params.git-model-revision) | tee $(results.git-model-revision)
          echo -n "$(params.model-dir)" | tee $(results.model-dir)
          echo -n "$(params.modelRelativePath)" | tee $(results.modelRelativePath)
          echo -n "$(params.s3-bucket-name)"| tee $(results.s3-bucket-name)
        fi
      fi
  workspaces:
  - description: The workspace for the downloaded model uris.
    name: workspace
  - description: The S3 secret.
    name: s3-secret
